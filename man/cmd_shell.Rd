% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cmd_shell.R
\name{cmd_shell}
\alias{cmd_shell}
\title{Turn a 'cmd_assign' Call into a Shell Command}
\usage{
cmd_shell(file, dir_shell = NULL)
}
\arguments{
\item{file}{Path to the R code file containing
the call to \code{\link[=cmd_assign]{cmd_assign()}}. The path
starts at \code{dir_shell}.}

\item{dir_shell}{The directory that contains
the shell script. The default is
the current working directory.}
}
\value{
\code{cmd_shell()} is typically called
for its side effect, which is to print a
shell command. However, \code{cmd_shell()}
invisibly returns a text string with the command.
}
\description{
Construct a shell command from a call to
\code{\link[=cmd_assign]{cmd_assign()}} inside an R file.
}
\details{
The shell script for a data analysis workflow
normally goes in the project directory.
}
\section{The components of a shell command}{
A shell command produced by \code{cmd_make()}
normally looks something like

\if{html}{\out{<div class="sourceCode">}}\preformatted{Rscript src/model.R \\
  data/cleaned.rds \\
  out/model.rds \\
  --use_log=TRUE
}\if{html}{\out{</div>}}

In this command
\itemize{
\item \code{Rscript} is a call to \code{\link[utils:Rscript]{utils::Rscript()}};
\item \verb{\\} is a "line continuation character";
\item \code{data/cleaned.rds} and \code{out/model.rds} are unnamed
arguments that Rscript passes to \code{src/model.R}; and
\item \code{--use_log=TRUE} is a named argument that
Rscript passes to \code{src/model.R}
}
}

\section{Using \code{cmd_shell()} to build a data analysis workflow}{
\itemize{
\item Step 1. Write the R file that carries out
the step in analysis (eg tidying data, fitting
a model, making a graph.) This file
will contain a call to \code{\link[=cmd_assign]{cmd_assign()}},
and  will be the first argument passed to
Rscript in the shell command.
When writing and testing the file,
use \code{\link[=cmd_assign]{cmd_assign()}} interactively.
\item Step 2. Once the R file is working correctly,
call \code{cmd_shell()}, and add the command
to your shell script.
}
}

\section{Identifying file arguments}{
To construct the rule, \code{cmd_shell()} needs to
be able to identify arguments that refer to a
file name. To do so, it uses the following heuristic:
\itemize{
\item if the call includes arguments whose names start with
a dot, then these arguments are assumed to
refer to file names;
\item otherwise, find arguments whose values
actually are file names
(as determined by \code{\link[=file.exists]{file.exists()}}) or that look
like they could be.
}
}

\examples{
library(fs)

## Create project directory containing
## 'src' and 'out' directories
path_project <- file_temp()
dir_create(path_project)
dir_create(path(path_project, "src"))
dir_create(path(path_project, "out"))

## Put R file in 'src' directory
writeLines(c("cmd_assign(x = 1, .out = 'out/results.rds')",
             "results <- x + 1",
             "saveRDS(results, file = .out)"),
           con = path(path_project, "src/results.R"))

## Look at directories
dir_tree(path_project)

## Look at contents of R file
lines <- readLines(path(path_project, "src/results.R"))
cat(paste(lines, collapse = "\n"))

## call 'cmd_shell()'
cmd_shell(file = "src/results.R",
          dir_shell = path_project)

## clean up
dir_delete(path_project)
}
\seealso{
\itemize{
\item \code{\link[=cmd_make]{cmd_make()}} Turn a \code{\link[=cmd_assign]{cmd_assign()}} call
into a Makefile rule
\item \code{\link[=shell_script]{shell_script()}} Create shell script
for a data analysis workflow
\item \code{\link[=cmd_assign]{cmd_assign()}} Process command line arguments
\item \href{https://bayesiandemography.github.io/command/articles/quickstart.html}{Quick Start Guide}
How to use \code{cmd_assign()}
\item \href{https://bayesiandemography.github.io/command/articles/workflow.html}{A Workflow for Data Analysis}
Data analysis workflows using \code{cmd_assign()}.
\item Episodes 1--3 of \href{https://swcarpentry.github.io/shell-novice/index.html}{The Unix Shell}
Introduction to the command line
\item \href{https://swcarpentry.github.io/r-novice-inflammation/05-cmdline.html}{Command-Line Programs}
Introduction to Rscript
}
}
